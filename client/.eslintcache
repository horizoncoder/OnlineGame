[{"E:\\test-task\\game\\client\\src\\index.js":"1","E:\\test-task\\game\\client\\src\\App.js":"2","E:\\test-task\\game\\client\\src\\reportWebVitals.js":"3","E:\\test-task\\game\\client\\src\\router\\Login.js":"4","E:\\test-task\\game\\client\\src\\components\\Navibar.js":"5","E:\\test-task\\game\\client\\src\\router\\Home.js":"6","E:\\test-task\\game\\client\\src\\components\\Login.js":"7","E:\\test-task\\game\\client\\src\\components\\Dashboard.js":"8","E:\\test-task\\game\\client\\src\\components\\Register.js":"9","E:\\test-task\\game\\client\\src\\components\\Game.js":"10","E:\\test-task\\game\\client\\src\\components\\Chat.js":"11","E:\\test-task\\game\\client\\src\\components\\api.js":"12","E:\\test-task\\game\\client\\src\\components\\InputTodo.js":"13","E:\\test-task\\game\\client\\src\\components\\ListTodos.js":"14","E:\\test-task\\game\\client\\src\\components\\EditTodo.js":"15"},{"size":219,"mtime":1610650371313,"results":"16","hashOfConfig":"17"},{"size":2489,"mtime":1610957395354,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":807,"mtime":1610521074542,"results":"20","hashOfConfig":"17"},{"size":573,"mtime":1610650371312,"results":"21","hashOfConfig":"17"},{"size":96,"mtime":1610696966601,"results":"22","hashOfConfig":"17"},{"size":1894,"mtime":1610993470813,"results":"23","hashOfConfig":"17"},{"size":1623,"mtime":1611037919578,"results":"24","hashOfConfig":"17"},{"size":3435,"mtime":1611037421013,"results":"25","hashOfConfig":"17"},{"size":9675,"mtime":1611006682443,"results":"26","hashOfConfig":"17"},{"size":1770,"mtime":1610957493630,"results":"27","hashOfConfig":"17"},{"size":90,"mtime":1610962265165,"results":"28","hashOfConfig":"17"},{"size":1574,"mtime":1611004786954,"results":"29","hashOfConfig":"17"},{"size":966,"mtime":1611006686112,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1611006684345,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"zihyng",{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\test-task\\game\\client\\src\\index.js",[],["71","72"],"E:\\test-task\\game\\client\\src\\App.js",["73","74","75","76","77","78"],"import React, { Fragment, useState,useEffect } from 'react';\nimport {Button, Navbar} from 'react-bootstrap'\nimport './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navibar from './components/Navibar';\n\nimport Login from './components/Login';\n\nimport {Game} from './components/Game';\nimport {Chat} from './components/Chat';\n\nimport Dashboard from './components/Dashboard';\n\n\nimport Register from './components/Register';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport {Home} from './router/Home';\nimport io from 'socket.io-client'\n\nconst socket = io.connect('http://localhost:4000')\n\ntoast.configure()\n\n\nfunction App() {\n  const [isAuthenticated,setIsAuthentication] = useState(false);\n  const setAuth=(boolean)=>{\n    setIsAuthentication(boolean)\n  };\n  async function isAuth(){\n    try {\n\n      const res = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token }\n      });\n\n\n      const parseRes= await res.json();\n      console.log(parseRes);\n      parseRes === true ? setIsAuthentication(true): setIsAuthentication(false);\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n  useEffect(()=>{\n    isAuth()\n  })\n  \n  return (\n    <Fragment>\n\n      <Router>\n      <Navibar/>\n        <div className=\"container\">\n          <Switch>\n           \n            <Route exact path=\"/login\"  render={props => !isAuthenticated ? (  <Login {...props} setAuth={setAuth} />) : (<Redirect to=\"/dashboard\" />  ) } />\n\n            <Route exact path=\"/register\" render={props =>  !isAuthenticated ? (   <Register {...props} setAuth={setAuth} />   ) : (   <Redirect to=\"/dashboard\" />  ) }  />\n\n            <Route   exact  path=\"/dashboard\"render={props =>    isAuthenticated ? (   <Dashboard {...props} setAuth={setAuth} /> ) : (   <Redirect to=\"/login\" />   )      }   />\n            \n            <Route  exact path=\"/\" component={Home}/>\n            <Route  exact path=\"/game\" component={Game}/>\n           // <Route  exact path=\"/chat\" component={Chat}/>\n            \n            <Route   exact  path=\"/game\"render={props =>    isAuthenticated ? (   <Dashboard {...props} setAuth={setAuth} /> ) : (   <Redirect to=\"/login\" />   )      }   />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","E:\\test-task\\game\\client\\src\\reportWebVitals.js",[],["79","80"],"E:\\test-task\\game\\client\\src\\router\\Login.js",["81"],"import React, { Fragment,} from \"react\";\r\nimport { Form ,Button} from 'react-bootstrap';\r\nexport const Login= ()=>(\r\n    <Form>\r\n        <h1 className=\"mt-5 text-center\">Login</h1>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n    <Form.Text className=\"text-muted\">\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicCheckbox\">\r\n\r\n  </Form.Group>\r\n  \r\n  <Button variant=\"primary\" type=\"submit\">\r\n   Login\r\n  </Button>{' '}\r\n\r\n  <Button variant=\"danger\" type=\"submit\" >\r\n    Register\r\n  </Button>\r\n  \r\n \r\n</Form>\r\n)\r\n\r\n\r\n",["82","83"],"E:\\test-task\\game\\client\\src\\components\\Navibar.js",[],"E:\\test-task\\game\\client\\src\\router\\Home.js",[],"E:\\test-task\\game\\client\\src\\components\\Login.js",["84"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport {API_URL} from  './api';\r\nconsole.log(API_URL)\r\n//const url= new URL('http://localhost:5000');\r\nconst Login = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = e =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n      const response = await fetch(\r\n        API_URL+\"auth/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n      if(parseRes.token){\r\n        localStorage.setItem(\"token\",parseRes.token);\r\n        setAuth(true);\r\n        toast.success(\"Успешная авторизация\")\r\n      }else{\r\n        setAuth(false)\r\n        toast.error(parseRes)\r\n      }\r\n\r\n     \r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"mt-5 text-center\">Login</h1>\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={e => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <button class=\"btn btn-success btn-block\">Submit</button>\r\n      </form>\r\n      <Link to=\"/register\">register</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\test-task\\game\\client\\src\\components\\Dashboard.js",["85"],"E:\\test-task\\game\\client\\src\\components\\Register.js",["86","87","88","89","90"],"E:\\test-task\\game\\client\\src\\components\\Game.js",["91","92"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css';\r\nimport io from 'socket.io-client';\r\nimport InputTodo from \"./InputTodo\";\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state=this.initialBoard(2) \r\n  \r\n  }\r\n\r\n//начальные данные\r\n  initialBoard = (size) => {\r\n    let state = {boardSize: size,\r\n    numRed: 0,\r\n    numBlue: 0,\r\n    turn: \"red\",\r\n    winMessage: \"\",\r\n    lineCoordinates: {},\r\n    boxColors: {}\r\n  }\r\n\r\n\r\n\r\n  \r\n  //палочки\r\n  for (let i=0; i<2; i++){\r\n    for (let j=0; j<state.boardSize+1; j++) {\r\n      for (let k=0; k<state.boardSize; k++) {\r\n        state.lineCoordinates[i+\",\"+j+\",\"+k]=0\r\n      }\r\n    }\r\n  }\r\n// квадраты\r\n  for (let i=0; i< state.boardSize; i++) {\r\n    for (let j=0; j< state.boardSize; j++) {\r\n      state.boxColors[i+\",\"+j] = \"black\"\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\n\r\n\r\n //поставить палочку\r\n  PutLine = (event) => {\r\n    var currentCoord=event.target.dataset.coord\r\n    if (this.state.lineCoordinates[currentCoord] === 0) { //опредиляем кординаты\r\n      console.log(\"lineCoordinates \"+this.state.lineCoordinates[currentCoord])\r\n      let newState=this.state.lineCoordinates\r\n     \r\n      newState[currentCoord] = this.state.turn === \"red\"? 1 : -1\r\n      console.log(\"newstate \"+newState[currentCoord])\r\n     \r\n      var splitCoord=currentCoord.split(',')\r\n      var x = splitCoord[0] //x кордината\r\n      var y = splitCoord[1] //y кордината\r\n      var z = splitCoord[2] //z кордината\r\n\r\n      let newBoxColors = this.state.boxColors\r\nconsole.log(this.state.boxColors )\r\n//\r\n      var madeSquare = 0\r\nconsole.log(\"madeSquare \" + madeSquare )\r\nconsole.log(\"ход \"+y)\r\n      if (x === \"0\") {\r\n        if (this.checkSquare(y,z) === 4) { //если квадрат заполнин  с 4 сторон меняем цвет \r\n          madeSquare = 1\r\n          console.log(\"madeSquare \" + madeSquare )\r\n          newBoxColors[y+','+z] =  (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\" //по последний палочки меняем цвет квадрата\r\n          console.log(\"color\"+ newBoxColors[y])\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,  //считаем очки\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            \r\n            boxColors: newBoxColors,\r\n           \r\n          }))\r\n          console.log(newBoxColors)\r\n         \r\n        }\r\n        if (this.checkSquare(parseFloat(y)-1,z) === 4) {\r\n          madeSquare = 1\r\n          newBoxColors[(parseFloat(y)-1)+','+z] = (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\"\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n          }))\r\n        }\r\n      } else {\r\n        if (this.checkSquare(z,y) === 4) {\r\n          madeSquare = 1\r\n          newBoxColors[z+','+y] = (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\"\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n          }))\r\n        }\r\n        if (this.checkSquare(z,parseFloat(y)-1) === 4) {\r\n          madeSquare = 1\r\n          newBoxColors[z+','+(parseFloat(y)-1)] = (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\"\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n          }))\r\n        }\r\n      }\r\n      if (madeSquare === 0) {\r\n        this.setState((prevState)=> ({\r\n          turn: prevState.turn === \"red\" ? \"blue\" : \"red\", //поменять цвет палки\r\n          \r\n        }))\r\n      } else {\r\n        this.checkGameOver()\r\n      }\r\n      \r\n    }\r\n  }\r\n//проверяем квадраты на заполнение\r\n  checkSquare = (y,z) => {\r\n    var checker1 = Math.abs(this.state.lineCoordinates['0,'+y+','+z])\r\n    console.log(checker1)\r\n    var checker2 = Math.abs(((parseFloat(y)+1))>this.state.boardSize ? 0 : this.state.lineCoordinates['0,'+(parseFloat(y)+1)+','+z])\r\n    console.log(checker2)\r\n    var checker3 = Math.abs(this.state.lineCoordinates['1,'+z+','+y])\r\n    var checker4 = Math.abs(((parseFloat(z)+1))>this.state.boardSize ? 0 : this.state.lineCoordinates['1,'+(parseFloat(z)+1)+','+y])\r\n    return checker1+checker2+checker3+checker4\r\n  }\r\n//проверка конца игры\r\n  checkGameOver = () => {\r\n    this.setState((prevState) =>   ({\r\n      winMessage: (prevState.numRed+prevState.numBlue == prevState.boardSize*2)? this.makeWinMessage(prevState) : \"\"\r\n    }))\r\n  }\r\n\r\n  makeWinMessage = (state) => {\r\n    var winMessage\r\n      if (state.numRed > state.numBlue) {\r\n        winMessage = \"Красный победил\"\r\n      } else if (state.numRed < state.numBlue) {\r\n        winMessage = \"Синий победил\"\r\n      } else {\r\n        winMessage = \"ничья\"\r\n      }\r\n      return (winMessage)\r\n  }\r\n//изменить размер поля\r\n  changeBoardSize = (event) => {\r\n    if (window.confirm('Создать новое поле?')){\r\n      var newState\r\n      if (event.target.id === \"small\") {\r\n        newState = this.initialBoard(2)\r\n      } else if (event.target.id === \"medium\") {\r\n        newState = this.initialBoard(8)\r\n      } else if (event.target.id === \"large\") {\r\n        newState = this.initialBoard(12)\r\n      }\r\n      this.setState((prevState)=> newState)\r\n    }\r\n  }\r\n//изменить цвет квадрата\r\n\r\n  selectColor = (int) => {\r\n    if (int===0) {\r\n      return (\"rgb(255,255,255)\")\r\n    } else if (int===1) {\r\n      return (\"rgb(255,0,0)\")\r\n    } else if (int===-1) {\r\n      return (\"rgb(0,0,255)\")\r\n    }\r\n  }\r\n//закрасить палочку при навидении\r\n  tint = (event) => {\r\n    var currentCoord=event.target.dataset.coord\r\n    if (this.state.lineCoordinates[currentCoord] === 0) {\r\n        if (this.state.turn === \"red\") {\r\n          event.target.style.backgroundColor = \"rgba(255,0,0,0.5)\"\r\n        } else {\r\n          event.target.style.backgroundColor = \"rgba(0,0,255,0.5)\"\r\n        }\r\n    }\r\n  }\r\n\r\n  untint = (event) => {\r\n    var currentCoord=event.target.dataset.coord\r\n    if (this.state.lineCoordinates[currentCoord] === 0) {\r\n      event.target.style.backgroundColor = \"rgb(255,255,255)\"\r\n    }\r\n  }\r\n\r\n  makeBoard = (boardSize) => {\r\n    var cols=[];\r\n    for (let i=0; i<=2*boardSize; i++) {// проверка на одинаковое количество колонок\r\n      var row=[]\r\n      for (let j=0; j<=2*boardSize; j++) {// проверка на одинаковое количество строки \r\n        if (i%2 === 0) {\r\n          if (j%2 ===0) {\r\n            row.push(React.createElement(\"div\",\r\n            {className: \"dot\", id: \"dot\"+Math.floor(i/2)+\",\"+Math.floor(j/2)} ,\"\"))\r\n          } else {\r\n            row.push(React.createElement(\"div\"\r\n              , {className: \"horizon\", \"data-coord\":\"0,\"+Math.floor(i/2)+ \",\" +Math.floor(j/2) //добавляем координаты точке\r\n              , onClick:this.PutLine, style:{backgroundColor: this.selectColor(this.state.lineCoordinates[\"0,\"+Math.floor(i/2)+ \",\" +Math.floor(j/2)])} //добавляем палке класс с цветом\r\n              , onMouseEnter:this.tint, onMouseLeave:this.untint}\r\n              , \"\"))\r\n          }\r\n        } else {\r\n          if (j%2 === 0) {\r\n            row.push(React.createElement(\"div\"\r\n              ,{className: \"vertical\",\"data-coord\":\"1,\"+Math.floor(j/2)+ \",\" +Math.floor(i/2) //добавляем координаты точке\r\n              , onClick:this.PutLine, style:{backgroundColor: this.selectColor(this.state.lineCoordinates[\"1,\"+Math.floor(j/2)+ \",\" +Math.floor(i/2)])}\r\n              , onMouseEnter:this.tint, onMouseLeave:this.untint}\r\n              ,\"\"))\r\n          } else {\r\n            row.push(React.createElement(\"div\"\r\n              ,{className: \"box\", id: \"box\"+Math.floor(i/2)+','+Math.floor(j/2), style: {backgroundColor: this.state.boxColors[Math.floor(i/2)+','+Math.floor(j/2)]}}\r\n              ,\"\"))\r\n\r\n          }\r\n        }\r\n      }\r\n      cols.push(React.createElement(\"div\",{className:\"colon\"},row))\r\n    }\r\n\r\n    return (React.createElement(\"div\",{id:\"game-board\"},cols))\r\n    \r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div id=\"game\">\r\n        <div id=\"header\">\r\n          <p id=\"score\"> Красный:{this.state.numRed} Синий:{this.state.numBlue} </p>\r\n         размер поля :\r\n          <button id= \"small\" onClick={this.changeBoardSize}> 5x5 </button>\r\n          <button id=\"medium\" onClick={this.changeBoardSize}> 8x8 </button>\r\n          <button id=\"large\" onClick={this.changeBoardSize}> 12x12 </button>\r\n          <p id=\"winner\"> {this.state.winMessage} </p>\r\n        </div>\r\n        <div id=\"board\">\r\n          {this.makeBoard(this.state.boardSize)}\r\n        </div>\r\n        <InputTodo></InputTodo>\r\n  \r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Game/>,document.getElementById('root'))\r\n  \r\n  \r\n  export { Game};","E:\\test-task\\game\\client\\src\\components\\Chat.js",[],"E:\\test-task\\game\\client\\src\\components\\api.js",["93"],"\r\n\r\nexport const API_URL =new URL('http://localhost:5000');\r\nexport default {API_URL};\r\n\r\n","E:\\test-task\\game\\client\\src\\components\\InputTodo.js",[],"E:\\test-task\\game\\client\\src\\components\\ListTodos.js",["94"],"import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\n\r\nconst ListTodos = ({ allTodos, setTodosChange }) => {\r\n  console.log(allTodos);\r\n  const [states, setStates] = useState([]); //empty array\r\n\r\n  //delete todo function\r\n\r\n  async function deleteTodo(id) {\r\n    try {\r\n      await fetch(`http://localhost:5000/dashboard/states/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token }\r\n      });\r\n\r\n      setStates(states.filter(state => state.state_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  // async function getTodos() {\r\n  //   const res = await fetch(\"http://localhost:5000/todos\");\r\n\r\n  //   const todoArray = await res.json();\r\n\r\n  //   setTodos(todoArray);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    setStates(allTodos);\r\n  }, [allTodos]);\r\n\r\n  console.log(states);\r\n\r\n  return (\r\n    <Fragment>\r\n      {\" \"}\r\n   <h1>FFF</h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListTodos;","E:\\test-task\\game\\client\\src\\components\\EditTodo.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":2,"column":17,"nodeType":"101","messageId":"102","endLine":2,"endColumn":23},{"ruleId":"99","severity":1,"message":"104","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":24},{"ruleId":"99","severity":1,"message":"105","line":25,"column":3,"nodeType":"101","messageId":"102","endLine":25,"endColumn":7},{"ruleId":"99","severity":1,"message":"106","line":32,"column":7,"nodeType":"101","messageId":"102","endLine":32,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":77,"column":58,"nodeType":"109","endLine":78,"endColumn":15},{"ruleId":"95","replacedBy":"110"},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","severity":1,"message":"112","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"95","replacedBy":"113"},{"ruleId":"97","replacedBy":"114"},{"ruleId":"99","severity":1,"message":"115","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"112","line":1,"column":38,"nodeType":"101","messageId":"102","endLine":1,"endColumn":46},{"ruleId":"99","severity":1,"message":"112","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"116","line":1,"column":36,"nodeType":"101","messageId":"102","endLine":1,"endColumn":42},{"ruleId":"99","severity":1,"message":"117","line":2,"column":26,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"99","severity":1,"message":"115","line":3,"column":16,"nodeType":"101","messageId":"102","endLine":3,"endColumn":24},{"ruleId":"99","severity":1,"message":"118","line":56,"column":9,"nodeType":"101","messageId":"102","endLine":56,"endColumn":21},{"ruleId":"99","severity":1,"message":"119","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":10},{"ruleId":"120","severity":1,"message":"121","line":138,"column":55,"nodeType":"122","messageId":"123","endLine":138,"endColumn":57},{"ruleId":"124","severity":1,"message":"125","line":4,"column":1,"nodeType":"126","endLine":4,"endColumn":26},{"ruleId":"99","severity":1,"message":"127","line":10,"column":18,"nodeType":"101","messageId":"102","endLine":10,"endColumn":28},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'ToastContainer' is defined but never used.","'Link' is defined but never used.","'socket' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",["128"],["129"],"'Fragment' is defined but never used.",["128"],["129"],"'Redirect' is defined but never used.","'render' is defined but never used.","'InputGroup' is defined but never used.","'handleSubmit' is assigned a value but never used.","'io' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'deleteTodo' is defined but never used.","no-global-assign","no-unsafe-negation"]