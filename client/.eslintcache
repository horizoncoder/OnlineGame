[{"E:\\test-task\\game\\client\\src\\index.js":"1","E:\\test-task\\game\\client\\src\\App.js":"2","E:\\test-task\\game\\client\\src\\reportWebVitals.js":"3","E:\\test-task\\game\\client\\src\\router\\Login.js":"4","E:\\test-task\\game\\client\\src\\components\\Navibar.js":"5","E:\\test-task\\game\\client\\src\\router\\Home.js":"6","E:\\test-task\\game\\client\\src\\components\\Login.js":"7","E:\\test-task\\game\\client\\src\\components\\Dashboard.js":"8","E:\\test-task\\game\\client\\src\\components\\Register.js":"9","E:\\test-task\\game\\client\\src\\components\\Game.js":"10","E:\\test-task\\game\\client\\src\\components\\api.js":"11","E:\\test-task\\2\\game\\client\\src\\index.js":"12","E:\\test-task\\2\\game\\client\\src\\App.js":"13","E:\\test-task\\2\\game\\client\\src\\components\\Navibar.js":"14","E:\\test-task\\2\\game\\client\\src\\components\\Game.js":"15","E:\\test-task\\2\\game\\client\\src\\components\\Login.js":"16","E:\\test-task\\2\\game\\client\\src\\components\\Dashboard.js":"17","E:\\test-task\\2\\game\\client\\src\\components\\Register.js":"18","E:\\test-task\\2\\game\\client\\src\\router\\Home.js":"19","E:\\test-task\\2\\game\\client\\src\\components\\stats.js":"20","E:\\test-task\\2\\game\\client\\src\\components\\Stats.js":"21","E:\\test-task\\2\\game\\client\\src\\components\\api.js":"22","E:\\test-task\\game\\client\\src\\components\\Stats.js":"23"},{"size":219,"mtime":1610650371313,"results":"24","hashOfConfig":"25"},{"size":2413,"mtime":1611180143374,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":807,"mtime":1610521074542,"results":"28","hashOfConfig":"25"},{"size":680,"mtime":1611170370888,"results":"29","hashOfConfig":"25"},{"size":2570,"mtime":1611180141617,"results":"30","hashOfConfig":"25"},{"size":3088,"mtime":1611180059978,"results":"31","hashOfConfig":"25"},{"size":1261,"mtime":1611179994187,"results":"32","hashOfConfig":"25"},{"size":3639,"mtime":1611180088592,"results":"33","hashOfConfig":"25"},{"size":9250,"mtime":1611179925759,"results":"34","hashOfConfig":"25"},{"size":84,"mtime":1611079993572,"results":"35","hashOfConfig":"25"},{"size":219,"mtime":1610650371313,"results":"36","hashOfConfig":"37"},{"size":2390,"mtime":1611088953621,"results":"38","hashOfConfig":"37"},{"size":573,"mtime":1611089387188,"results":"39","hashOfConfig":"37"},{"size":9364,"mtime":1611089391808,"results":"40","hashOfConfig":"37"},{"size":3032,"mtime":1611089392677,"results":"41","hashOfConfig":"37"},{"size":1485,"mtime":1611079961421,"results":"42","hashOfConfig":"37"},{"size":3662,"mtime":1611089385800,"results":"43","hashOfConfig":"37"},{"size":96,"mtime":1610696966601,"results":"44","hashOfConfig":"37"},{"size":2687,"mtime":1611089389684,"results":"45","hashOfConfig":"37"},{"size":2687,"mtime":1611089389684,"results":"46","hashOfConfig":"37"},{"size":84,"mtime":1611079993572,"results":"47","hashOfConfig":"37"},{"size":2914,"mtime":1611172261204,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"zihyng",{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"95zw8f",{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"51"},"E:\\test-task\\game\\client\\src\\index.js",[],["108","109"],"E:\\test-task\\game\\client\\src\\App.js",["110","111","112","113"],"import React, { Fragment, useState,useEffect } from 'react';\nimport {Button, Navbar} from 'react-bootstrap'\nimport './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navibar from './components/Navibar';\n\nimport Login from './components/Login';\n\nimport {Game} from './components/Game';\nimport {Stats} from './components/Stats'\nimport Dashboard from './components/Dashboard';\n\n\nimport Register from './components/Register';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport {Home} from './router/Home';\n\ntoast.configure()\n\n\nfunction App() {\n         const [isAuthenticated,setIsAuthentication] = useState(false);\n          const setAuth=(boolean)=>{\n         setIsAuthentication(boolean)\n  };\n  async function isAuth(){\n    try {\n\n      const res = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token }\n      });\n\n\n      const parseRes= await res.json();\n      console.log(parseRes);\n      parseRes === true ? setIsAuthentication(true): setIsAuthentication(false);\n    } catch (err) {\n         console.error(err.message)\n    }\n  }\n  useEffect(()=>{\n    isAuth()\n  })\n  \n  return (\n    <Fragment>\n\n      <Router>\n      <Navibar/>\n        <div className=\"container\">\n          <Switch>\n           \n            <Route exact path=\"/login\"  render={props => !isAuthenticated ? (  <Login {...props} setAuth={setAuth} />) : (<Redirect to=\"/dashboard\" />  ) } />\n\n            <Route exact path=\"/register\" render={props =>  !isAuthenticated ? (   <Register {...props} setAuth={setAuth} />   ) : (   <Redirect to=\"/dashboard\" />  ) }  />\n\n            <Route   exact  path=\"/dashboard\"render={props =>    isAuthenticated ? (   <Dashboard {...props} setAuth={setAuth} /> ) : (   <Redirect to=\"/login\" />   )      }   />\n            \n            <Route  exact path=\"/\" component={Home}/>\n            <Route  exact path=\"/game\" component={Game}/>\n            <Route  exact path=\"/stats\" component={Stats}/>\n            <Route   exact  path=\"/game\"render={props =>    isAuthenticated ? (   <Dashboard {...props} setAuth={setAuth} /> ) : (   <Redirect to=\"/login\" />   )      }   />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","E:\\test-task\\game\\client\\src\\reportWebVitals.js",[],["114","115"],"E:\\test-task\\game\\client\\src\\router\\Login.js",["116"],"import React, { Fragment,} from \"react\";\r\nimport { Form ,Button} from 'react-bootstrap';\r\nexport const Login= ()=>(\r\n    <Form>\r\n        <h1 className=\"mt-5 text-center\">Login</h1>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n    <Form.Text className=\"text-muted\">\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicCheckbox\">\r\n\r\n  </Form.Group>\r\n  \r\n  <Button variant=\"primary\" type=\"submit\">\r\n   Login\r\n  </Button>{' '}\r\n\r\n  <Button variant=\"danger\" type=\"submit\" >\r\n    Register\r\n  </Button>\r\n  \r\n \r\n</Form>\r\n)\r\n\r\n\r\n",["117","118"],"E:\\test-task\\game\\client\\src\\components\\Navibar.js",[],"E:\\test-task\\game\\client\\src\\router\\Home.js",[],"E:\\test-task\\game\\client\\src\\components\\Login.js",["119","120"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form,Button,Col } from 'react-bootstrap';\r\nimport { toast } from \"react-toastify\";\r\nimport {API_URL} from  './api';\r\nconst url= new URL('http://localhost:5000');\r\nconst Login = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = e =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async e => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n    }\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n      const response = await fetch(\r\n        API_URL+\"auth/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n      if(parseRes.token){\r\n        localStorage.setItem(\"token\",parseRes.token);\r\n        setAuth(true);\r\n        toast.success(\"Успешная авторизация\")\r\n      }else{\r\n        setAuth(false)\r\n        toast.error(parseRes)\r\n      }\r\n\r\n     \r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n \r\n\r\n  return (\r\n    <Fragment>\r\n      <Form noValidate validated={validated} onSubmit={onSubmitForm } className=\"centered-top\">\r\n      <Form.Row>\r\n        \r\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\r\n          <br></br>\r\n          <Form.Label>Почта</Form.Label>\r\n          <Form.Control\r\n            required\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"email\"\r\n          onChange={e => onChange(e)}\r\n          />\r\n          <Form.Control.Feedback>Отлично!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n              Введите почту \r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n        </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n          <Form.Label>Пароль</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"password\"\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <Form.Control.Feedback>Отлично!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n              Введите пароль\r\n            </Form.Control.Feedback>\r\n          \r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n      \r\n        \r\n  \r\n      </Form.Row>\r\n     \r\n      <Button type=\"submit\">Логин</Button>\r\n    </Form>\r\n    <Link to=\"/register\">Регистрация</Link>\r\n\r\n    \r\n    </Fragment>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\test-task\\game\\client\\src\\components\\Dashboard.js",["121","122"],"import React, { useEffect, useState ,Fragment} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Link} from 'react-router-dom';\r\nimport {API_URL} from  './api';\r\nimport {Game} from './Game'\r\nconst Dashboard = ({ setAuth }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const getProfile = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        API_URL+\"dashboard\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token }\r\n      });\r\n\r\n  \r\n\r\n    const parseRes = await res.json();\r\n    setName(parseRes.user_name)\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const logout = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      localStorage.removeItem(\"token\");\r\n      setAuth(false);\r\n      toast.success(\"Успешная авторизация\");\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mt-5\">Панель</h1>\r\n      <h2>Добро пожаловать, {name} </h2>\r\n      <button onClick={e => logout(e)} className=\"btn btn-primary\">\r\n        Logout\r\n      </button>\r\n\r\n      <Game></Game>\r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Dashboard;\r\n","E:\\test-task\\game\\client\\src\\components\\Register.js",["123"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Form,Button,Col } from 'react-bootstrap';\r\nimport {API_URL} from  './api';\r\n\r\n\r\nconst Register = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  \r\n    \r\n  });\r\n\r\n  const { email, password, name } = inputs;\r\n\r\n  const onChange = e =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async e => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password, name };\r\n      const response = await fetch(\r\n        API_URL+\"auth/register\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n\r\n\r\n        if(parseRes.token){\r\n          console.log(parseRes);\r\n          localStorage.setItem(\"token\",parseRes.token);\r\n\r\n          setAuth(true);\r\n          toast.success(\"Успешная регистрация\")\r\n        }else{\r\n          setAuth(false)\r\n          toast.error(parseRes)\r\n        }\r\n  \r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  const [validated, setValidated] = useState(false);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={onSubmitForm }>\r\n      <Form.Row>\r\n        \r\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\r\n          <br></br>\r\n          <Form.Label>Почта</Form.Label>\r\n          <Form.Control\r\n            required\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"email\"\r\n          onChange={e => onChange(e)}\r\n          />\r\n          <Form.Control.Feedback>Отлично!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n              Введите почту \r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n        </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n          <Form.Label>Пароль</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"password\"\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <Form.Control.Feedback>Отлично!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n              Введите пароль\r\n            </Form.Control.Feedback>\r\n          \r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n      <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n          <Form.Label>Имя</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"name\"\r\n          onChange={e => onChange(e)}\r\n          />\r\n           <Form.Control.Feedback>Отлично!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n              Введите имя\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n        \r\n  \r\n      </Form.Row>\r\n     \r\n      <Button type=\"submit\">Регистрация</Button>\r\n    </Form>\r\n      \r\n    \r\n      \r\n      <Link to=\"/login\">Логин</Link>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","E:\\test-task\\game\\client\\src\\components\\Game.js",["124","125"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css';\r\nimport {Stats} from './Stats'\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state=this.initialBoard(2) \r\n  \r\n  }\r\n  \r\n\r\n\r\n  initialBoard = (size) => {\r\n    let state = {boardSize: size,\r\n    numRed: 0,\r\n    numBlue: 0,\r\n    turn: \"red\",\r\n    winMessage: \"\",\r\n    lineCoordinates: {},\r\n    boxColors: {}\r\n  }\r\n\r\n\r\n\r\n  \r\n  //палочки\r\n  for (let i=0; i<2; i++){\r\n    for (let j=0; j<state.boardSize+1; j++) {\r\n      for (let k=0; k<state.boardSize; k++) {\r\n        state.lineCoordinates[i+\",\"+j+\",\"+k]=0\r\n      }\r\n    }\r\n  }\r\n// квадраты\r\n  for (let i=0; i< state.boardSize; i++) {\r\n    for (let j=0; j< state.boardSize; j++) {\r\n      state.boxColors[i+\",\"+j] = \"white\"\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\n\r\n\r\n //поставить палочку\r\n  PutLine = (event) => {\r\n    var currentCoord=event.target.dataset.coord\r\n    if (this.state.lineCoordinates[currentCoord] === 0) { //опредиляем кординаты\r\n      console.log(\"lineCoordinates \"+this.state.lineCoordinates[currentCoord])\r\n      let newState=this.state.lineCoordinates\r\n     \r\n      newState[currentCoord] = this.state.turn === \"red\"? 1 : -1\r\n      \r\n     \r\n      var splitCoord=currentCoord.split(',')\r\n      var x = splitCoord[0] //x кордината\r\n      var y = splitCoord[1] //y кордината\r\n      var z = splitCoord[2] //z кордината\r\n\r\n      let newBoxColors = this.state.boxColors\r\n//\r\n      var madeSquare = 0\r\n      if (x === \"0\") {\r\n        if (this.checkSquare(y,z) === 4) { //если квадрат заполнин  с 4 сторон меняем цвет \r\n          madeSquare = 1\r\n          newBoxColors[y+','+z] =  (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\" //по последний палочки меняем цвет квадрата\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,  //считаем очки\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n           \r\n          }))\r\n\r\n        }\r\n        if (this.checkSquare(parseFloat(y)-1,z) === 4) {\r\n          madeSquare = 1\r\n          newBoxColors[(parseFloat(y)-1)+','+z] = (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\"\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n          }))\r\n        }\r\n      } else {\r\n        if (this.checkSquare(z,y) === 4) {\r\n          madeSquare = 1\r\n          newBoxColors[z+','+y] = (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\"\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n          }))\r\n        }\r\n        if (this.checkSquare(z,parseFloat(y)-1) === 4) {\r\n          madeSquare = 1\r\n          newBoxColors[z+','+(parseFloat(y)-1)] = (this.state.turn ===\"red\") ? \"rgba(255,0,0,0.5)\" : \"rgba(0,0,255,0.5)\"\r\n          this.setState((prevState)=>({\r\n            numRed: (prevState.turn ===\"red\") ? prevState.numRed+1 : prevState.numRed,\r\n            numBlue: (prevState.turn ===\"blue\") ? prevState.numBlue+1 : prevState.numBlue,\r\n            boxColors: newBoxColors,\r\n          }))\r\n        }\r\n      }\r\n      if (madeSquare === 0) {\r\n        this.setState((prevState)=> ({\r\n          turn: prevState.turn === \"red\" ? \"blue\" : \"red\", //поменять цвет палки\r\n        }))\r\n      } else {\r\n        this.checkGameOver()\r\n      }\r\n    }\r\n  }\r\n//проверяем квадраты на заполнение\r\n  checkSquare = (y,z) => {\r\n    var checker1 = Math.abs(this.state.lineCoordinates['0,'+y+','+z])\r\n    var checker2 = Math.abs(((parseFloat(y)+1))>this.state.boardSize ? 0 : this.state.lineCoordinates['0,'+(parseFloat(y)+1)+','+z])\r\n    var checker3 = Math.abs(this.state.lineCoordinates['1,'+z+','+y])\r\n    var checker4 = Math.abs(((parseFloat(z)+1))>this.state.boardSize ? 0 : this.state.lineCoordinates['1,'+(parseFloat(z)+1)+','+y])\r\n    return checker1+checker2+checker3+checker4\r\n  }\r\n//проверка конца игры\r\n  checkGameOver = () => {\r\n    this.setState((prevState) =>   ({\r\n      winMessage: (prevState.numRed+prevState.numBlue == prevState.boardSize*2)? this.makeWinMessage(prevState) : \"\"\r\n    }))\r\n  }\r\n\r\n  makeWinMessage = (state) => {\r\n    var winMessage\r\n      if (state.numRed > state.numBlue) {\r\n        winMessage = \"Красный победил\"\r\n      } else if (state.numRed < state.numBlue) {\r\n        winMessage = \"Синий победил\"\r\n      } else {\r\n        winMessage = \"ничья\"\r\n      }\r\n      return (winMessage)\r\n  }\r\n\r\n  changeBoardSize = (event) => {\r\n    if (window.confirm('Создать новое поле?')){\r\n      var newState\r\n      if (event.target.id === \"small\") {\r\n        newState = this.initialBoard(2)\r\n      } else if (event.target.id === \"medium\") {\r\n        newState = this.initialBoard(8)\r\n      } else if (event.target.id === \"large\") {\r\n        newState = this.initialBoard(12)\r\n      }\r\n      this.setState((prevState)=> newState)\r\n    }\r\n  }\r\n\r\n  selectColor = (int) => {\r\n    if (int===0) {\r\n      return (\"rgb(255,255,255)\")\r\n    } else if (int===1) {\r\n      return (\"rgb(255,0,0)\")\r\n    } else if (int===-1) {\r\n      return (\"rgb(0,0,255)\")\r\n    }\r\n  }\r\n//закрасить квадарат \r\n  tint = (event) => {\r\n    var currentCoord=event.target.dataset.coord\r\n    if (this.state.lineCoordinates[currentCoord] === 0) {\r\n        if (this.state.turn === \"red\") {\r\n          event.target.style.backgroundColor = \"rgba(255,0,0,0.5)\"\r\n        } else {\r\n          event.target.style.backgroundColor = \"rgba(0,0,255,0.5)\"\r\n        }\r\n    }\r\n  }\r\n\r\n  untint = (event) => {\r\n    var currentCoord=event.target.dataset.coord\r\n    if (this.state.lineCoordinates[currentCoord] === 0) {\r\n      event.target.style.backgroundColor = \"rgb(255,255,255)\"\r\n    }\r\n  }\r\n\r\n  makeBoard = (boardSize) => {\r\n    var cols=[];\r\n    for (let i=0; i<=2*boardSize; i++) {// проверка на одинаковое количество строки \r\n      var row=[]\r\n      for (let j=0; j<=2*boardSize; j++) {// проверка на одинаковое количество строки \r\n        if (i%2 === 0) {\r\n          if (j%2 ===0) {\r\n            row.push(React.createElement(\"div\",\r\n            {className: \"dot\", id: \"dot\"+Math.floor(i/2)+\",\"+Math.floor(j/2)} ,\"\"))\r\n          } else {\r\n            row.push(React.createElement(\"div\"\r\n              , {className: \"horizon\", \"data-coord\":\"0,\"+Math.floor(i/2)+ \",\" +Math.floor(j/2) //добавляем координаты точкам\r\n              , onClick:this.PutLine, style:{backgroundColor: this.selectColor(this.state.lineCoordinates[\"0,\"+Math.floor(i/2)+ \",\" +Math.floor(j/2)])} //добавляем палке класс с цветом\r\n              , onMouseEnter:this.tint, onMouseLeave:this.untint}\r\n              , \"\"))\r\n          }\r\n        } else {\r\n          if (j%2 === 0) {\r\n            row.push(React.createElement(\"div\"\r\n              ,{className: \"vertical\",\"data-coord\":\"1,\"+Math.floor(j/2)+ \",\" +Math.floor(i/2)\r\n              , onClick:this.PutLine, style:{backgroundColor: this.selectColor(this.state.lineCoordinates[\"1,\"+Math.floor(j/2)+ \",\" +Math.floor(i/2)])}\r\n              , onMouseEnter:this.tint, onMouseLeave:this.untint}\r\n              ,\"\"))\r\n          } else {\r\n            row.push(React.createElement(\"div\"\r\n              ,{className: \"box\", id: \"box\"+Math.floor(i/2)+','+Math.floor(j/2), style: {backgroundColor: this.state.boxColors[Math.floor(i/2)+','+Math.floor(j/2)]}}\r\n              ,\"\"))\r\n\r\n          }\r\n        }\r\n      }\r\n      cols.push(React.createElement(\"div\",{className:\"colon\"},row))\r\n    }\r\n\r\n    return (React.createElement(\"div\",{id:\"game-board\"},cols))\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div id=\"game\">\r\n        <div id=\"header\">\r\n          <h1>Точки и квадраты</h1>\r\n          <p id=\"score\"> Красный: {this.state.numRed} Синий: {this.state.numBlue} Сейчас ходит: {this.state.turn}  </p>  <p id=\"winner\"> {this.state.winMessage} </p>\r\n          Размер поля:\r\n          <button id= \"small\" onClick={this.changeBoardSize}> 2x2 </button>\r\n          <button id=\"medium\" onClick={this.changeBoardSize}> 8x8 </button>\r\n          <button id=\"large\" onClick={this.changeBoardSize}> 12x12 </button>\r\n        \r\n        </div>\r\n        <div id=\"board\">\r\n          {this.makeBoard(this.state.boardSize)}\r\n        </div>\r\n\r\n        \r\n  \r\n        <Stats numBlue={this.state.numBlue} numRed={this.state.numRed} winMessage={this.state.winMessage}   />\r\n      </div>\r\n     \r\n    )\r\n    \r\n  }\r\n}\r\n\r\n//ReactDOM.render(<Game/>,document.getElementById('root'))\r\n\r\n  \r\n\r\n  export { Game};\r\n  ","E:\\test-task\\game\\client\\src\\components\\api.js",["126"],"export const API_URL =new URL('http://localhost:5000');\r\nexport default {API_URL};\r\n",["127","128"],"E:\\test-task\\2\\game\\client\\src\\index.js",[],["129","130"],"E:\\test-task\\2\\game\\client\\src\\App.js",["131","132","133","134"],"E:\\test-task\\2\\game\\client\\src\\components\\Navibar.js",[],"E:\\test-task\\2\\game\\client\\src\\components\\Game.js",["135"],"E:\\test-task\\2\\game\\client\\src\\components\\Login.js",["136"],"E:\\test-task\\2\\game\\client\\src\\components\\Dashboard.js",["137"],"E:\\test-task\\2\\game\\client\\src\\components\\Register.js",["138"],"E:\\test-task\\2\\game\\client\\src\\router\\Home.js",[],"E:\\test-task\\2\\game\\client\\src\\components\\stats.js",[],"E:\\test-task\\2\\game\\client\\src\\components\\Stats.js",[],"E:\\test-task\\2\\game\\client\\src\\components\\api.js",["139"],"E:\\test-task\\game\\client\\src\\components\\Stats.js",["140"],"import React, { Component } from 'react'\r\nimport {Game} from './Game'\r\nclass Stats extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n       this.input=React.createRef()\r\n       this.state={\r\n           list:[],\r\n          \r\n          }\r\n          \r\n    }\r\n\r\n    addTask=()=>{\r\n    \r\n    const Items={\r\n            value:this.input= \"Синий \"+JSON.stringify(this.props.numBlue)+ \" Красный \"+JSON.stringify(this.props.numRed) +\" \"+ JSON.stringify(this.props.winMessage),\r\n            Date: new Date().toUTCString()\r\n        };\r\n\r\n        if(localStorage.getItem('list')==null){\r\n            const list=[]\r\n            list.push(Items);\r\n            localStorage.setItem(\"list\",JSON.stringify(list))\r\n        }\r\n        else{\r\n            const list=JSON.parse(localStorage.getItem('list'))\r\n            list.push(Items)\r\n            localStorage.setItem(\"list\",JSON.stringify(list))\r\n        }\r\n        this.setState({\r\n            list:JSON.parse(localStorage.getItem('list'))\r\n        });\r\n    }\r\n  \r\n\r\n\r\n    componentDidMount() {\r\n        const list = window.localStorage.getItem('list');\r\n        const parsedList = JSON.parse(list);\r\n      \r\n        if(list == null){\r\n            return false\r\n            \r\n        }\r\n\r\n      \r\n\r\n        else{\r\n            this.setState({\r\n                list: parsedList,\r\n            })\r\n            console.log(this.state.list);\r\n           \r\n        }\r\n    }\r\n    \r\n \r\n    deleteItem=(event)=> {\r\n        \r\n        let index = event.target.getAttribute('data-key')\r\n        let listValue=JSON.parse(localStorage.getItem('list'));\r\n        listValue.splice(index,1)\r\n        this.setState({list:listValue});\r\n        localStorage.setItem('list',JSON.stringify(listValue))\r\n    }\r\n    \r\n  \r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <h1>Сохранить результат</h1>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                \r\n                        <button onClick={this.addTask}  >Сохранить</button>\r\n                       \r\n                        <br></br>\r\n                        <br></br>\r\n                            <ol>\r\n                                {\r\n                                \r\n                                    this.state.list.map((item,index)=>\r\n                                    {\r\n                                        return(<li key={item.id}> {item.value}\r\n                                       \r\n                                        <button className=\"button\" type=\"button\" value=\"delete\" data-key={index} onClick={this.deleteItem}>Удалить</button></li>)\r\n                                    })\r\n                                } \r\n                            </ol>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {Stats }\r\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"145","severity":1,"message":"149","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":23},{"ruleId":"145","severity":1,"message":"150","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":24},{"ruleId":"145","severity":1,"message":"151","line":24,"column":3,"nodeType":"147","messageId":"148","endLine":24,"endColumn":7},{"ruleId":"141","replacedBy":"152"},{"ruleId":"143","replacedBy":"153"},{"ruleId":"145","severity":1,"message":"154","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"141","replacedBy":"155"},{"ruleId":"143","replacedBy":"156"},{"ruleId":"145","severity":1,"message":"157","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"158","line":6,"column":7,"nodeType":"147","messageId":"148","endLine":6,"endColumn":10},{"ruleId":"145","severity":1,"message":"154","line":1,"column":38,"nodeType":"147","messageId":"148","endLine":1,"endColumn":46},{"ruleId":"145","severity":1,"message":"151","line":3,"column":9,"nodeType":"147","messageId":"148","endLine":3,"endColumn":13},{"ruleId":"145","severity":1,"message":"157","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"159","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":126,"column":55,"nodeType":"162","messageId":"163","endLine":126,"endColumn":57},{"ruleId":"164","severity":1,"message":"165","line":2,"column":1,"nodeType":"166","endLine":2,"endColumn":26},{"ruleId":"141","replacedBy":"167"},{"ruleId":"143","replacedBy":"168"},{"ruleId":"141","replacedBy":"169"},{"ruleId":"143","replacedBy":"170"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"145","severity":1,"message":"149","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":23},{"ruleId":"145","severity":1,"message":"150","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":24},{"ruleId":"145","severity":1,"message":"151","line":24,"column":3,"nodeType":"147","messageId":"148","endLine":24,"endColumn":7},{"ruleId":"160","severity":1,"message":"161","line":133,"column":55,"nodeType":"162","messageId":"163","endLine":133,"endColumn":57},{"ruleId":"145","severity":1,"message":"157","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"154","line":1,"column":38,"nodeType":"147","messageId":"148","endLine":1,"endColumn":46},{"ruleId":"145","severity":1,"message":"157","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":2,"column":1,"nodeType":"166","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"171","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'ToastContainer' is defined but never used.","'Link' is defined but never used.",["172"],["173"],"'Fragment' is defined but never used.",["172"],["173"],"'Redirect' is defined but never used.","'url' is assigned a value but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["172"],["173"],["172"],["173"],"'Game' is defined but never used.","no-global-assign","no-unsafe-negation"]